//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Carestream.AdmTramas.DataAccess.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AdmTramasContainer : DbContext
    {
        public AdmTramasContainer()
            : base("name=AdmTramasContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Libro> Libros { get; set; }
        public virtual DbSet<LibroLog> LibroLogs { get; set; }
        public virtual DbSet<LibroLogExportDetalle> LibroLogExportDetalles { get; set; }
        public virtual DbSet<ErrorLinea> ErrorLineas { get; set; }
        public virtual DbSet<CodigoDetalle> CodigoDetalles { get; set; }
        public virtual DbSet<LibroDiario> LibroDiarios { get; set; }
        public virtual DbSet<RegistroVenta> RegistroVentas { get; set; }
        public virtual DbSet<RegistroCompra> RegistroCompras { get; set; }
        public virtual DbSet<Estructura> Estructuras { get; set; }
        public virtual DbSet<LibroMayor> LibroMayors { get; set; }
        public virtual DbSet<LibroDiarioAgrupado> LibroDiarioAgrupados { get; set; }
        public virtual DbSet<LibroDiarioDetalle> LibroDiarioDetalles { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Libro> ListarLibros()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Libro>("ListarLibros");
        }
    
        public virtual ObjectResult<Libro> ListarLibros(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Libro>("ListarLibros", mergeOption);
        }
    
        public virtual ObjectResult<LibroLog> ListarLibroLog(string tipolog)
        {
            var tipologParameter = tipolog != null ?
                new ObjectParameter("tipolog", tipolog) :
                new ObjectParameter("tipolog", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroLog>("ListarLibroLog", tipologParameter);
        }
    
        public virtual ObjectResult<LibroLog> ListarLibroLog(string tipolog, MergeOption mergeOption)
        {
            var tipologParameter = tipolog != null ?
                new ObjectParameter("tipolog", tipolog) :
                new ObjectParameter("tipolog", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroLog>("ListarLibroLog", mergeOption, tipologParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ObtieneMaximoLibroLog(Nullable<short> idLibro)
        {
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("idLibro", idLibro) :
                new ObjectParameter("idLibro", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ObtieneMaximoLibroLog", idLibroParameter);
        }
    
        public virtual ObjectResult<LibroLog_ConsultaxIdLog_Result> LibroLog_ConsultaxIdLog(Nullable<int> idLibroLog)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroLog_ConsultaxIdLog_Result>("LibroLog_ConsultaxIdLog", idLibroLogParameter);
        }
    
        public virtual ObjectResult<RegistroVenta> ConsultaImportVentas(Nullable<int> idLibroLog)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegistroVenta>("ConsultaImportVentas", idLibroLogParameter);
        }
    
        public virtual ObjectResult<RegistroVenta> ConsultaImportVentas(Nullable<int> idLibroLog, MergeOption mergeOption)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegistroVenta>("ConsultaImportVentas", mergeOption, idLibroLogParameter);
        }
    
        public virtual ObjectResult<CodigoDetalle> ListarCodigoDetalle(Nullable<short> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CodigoDetalle>("ListarCodigoDetalle", tipoParameter);
        }
    
        public virtual ObjectResult<CodigoDetalle> ListarCodigoDetalle(Nullable<short> tipo, MergeOption mergeOption)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CodigoDetalle>("ListarCodigoDetalle", mergeOption, tipoParameter);
        }
    
        public virtual ObjectResult<LibroDiario> ConsultaLibroDiarioPorPeriodo(Nullable<int> mes, Nullable<int> anio)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroDiario>("ConsultaLibroDiarioPorPeriodo", mesParameter, anioParameter);
        }
    
        public virtual ObjectResult<LibroDiario> ConsultaLibroDiarioPorPeriodo(Nullable<int> mes, Nullable<int> anio, MergeOption mergeOption)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroDiario>("ConsultaLibroDiarioPorPeriodo", mergeOption, mesParameter, anioParameter);
        }
    
        public virtual ObjectResult<LibroDiario> ConsultaLogLibroDiario(Nullable<int> idLibroLog)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroDiario>("ConsultaLogLibroDiario", idLibroLogParameter);
        }
    
        public virtual ObjectResult<LibroDiario> ConsultaLogLibroDiario(Nullable<int> idLibroLog, MergeOption mergeOption)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroDiario>("ConsultaLogLibroDiario", mergeOption, idLibroLogParameter);
        }
    
        public virtual ObjectResult<LibroLog_ConsultaLogCompras_Result> LibroLog_ConsultaLogCompras(Nullable<int> idLibroLog)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroLog_ConsultaLogCompras_Result>("LibroLog_ConsultaLogCompras", idLibroLogParameter);
        }
    
        public virtual ObjectResult<LibroLog_ConsultaLogLibroDiarioDetalle_Result> LibroLog_ConsultaLogLibroDiarioDetalle(Nullable<int> idLibroLog)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroLog_ConsultaLogLibroDiarioDetalle_Result>("LibroLog_ConsultaLogLibroDiarioDetalle", idLibroLogParameter);
        }
    
        public virtual ObjectResult<LibroLog_ConsultaLogLibroMayor_Result> LibroLog_ConsultaLogLibroMayor(Nullable<int> idLibroLog)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroLog_ConsultaLogLibroMayor_Result>("LibroLog_ConsultaLogLibroMayor", idLibroLogParameter);
        }
    
        public virtual ObjectResult<RegistroCompra> ConsultaImportCompras(Nullable<int> idLibroLog)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegistroCompra>("ConsultaImportCompras", idLibroLogParameter);
        }
    
        public virtual ObjectResult<RegistroCompra> ConsultaImportCompras(Nullable<int> idLibroLog, MergeOption mergeOption)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegistroCompra>("ConsultaImportCompras", mergeOption, idLibroLogParameter);
        }
    
        public virtual ObjectResult<LibroMayor> ConsultaLibroMayor(Nullable<int> idLibroLog)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroMayor>("ConsultaLibroMayor", idLibroLogParameter);
        }
    
        public virtual ObjectResult<LibroMayor> ConsultaLibroMayor(Nullable<int> idLibroLog, MergeOption mergeOption)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroMayor>("ConsultaLibroMayor", mergeOption, idLibroLogParameter);
        }
    
        public virtual ObjectResult<LibroDiarioDetalle> ConsultaLibroDiarioDetalle(Nullable<int> idLibroLog)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroDiarioDetalle>("ConsultaLibroDiarioDetalle", idLibroLogParameter);
        }
    
        public virtual ObjectResult<LibroDiarioDetalle> ConsultaLibroDiarioDetalle(Nullable<int> idLibroLog, MergeOption mergeOption)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroDiarioDetalle>("ConsultaLibroDiarioDetalle", mergeOption, idLibroLogParameter);
        }
    
        public virtual int Error_ActualizarLog(Nullable<int> idLibroLogImport)
        {
            var idLibroLogImportParameter = idLibroLogImport.HasValue ?
                new ObjectParameter("idLibroLogImport", idLibroLogImport) :
                new ObjectParameter("idLibroLogImport", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Error_ActualizarLog", idLibroLogImportParameter);
        }
    
        public virtual int ActualizaLogErrores(Nullable<int> idLibroLogImport)
        {
            var idLibroLogImportParameter = idLibroLogImport.HasValue ?
                new ObjectParameter("idLibroLogImport", idLibroLogImport) :
                new ObjectParameter("idLibroLogImport", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizaLogErrores", idLibroLogImportParameter);
        }
    
        public virtual ObjectResult<Errores_ListarLineas_Result> Errores_ListarLineas(Nullable<int> idLibroLog)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Errores_ListarLineas_Result>("Errores_ListarLineas", idLibroLogParameter);
        }
    
        public virtual ObjectResult<ErrorLinea> ConsultaErroresPorLog(Nullable<int> idLibroLog)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ErrorLinea>("ConsultaErroresPorLog", idLibroLogParameter);
        }
    
        public virtual ObjectResult<ErrorLinea> ConsultaErroresPorLog(Nullable<int> idLibroLog, MergeOption mergeOption)
        {
            var idLibroLogParameter = idLibroLog.HasValue ?
                new ObjectParameter("idLibroLog", idLibroLog) :
                new ObjectParameter("idLibroLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ErrorLinea>("ConsultaErroresPorLog", mergeOption, idLibroLogParameter);
        }
    }
}
